context:
  version: "9.10.1"

package:
  name: ghc-bootstrap
  version: ${{ version }}

source:
  - if: osx
    then:
      url: https://downloads.haskell.org/~ghc/${{ version }}/ghc-${{ version }}-x86_64-apple-darwin.tar.xz
      sha256: 8cf22188930e10d7ac5270d425e21a3dab606af73a655493639345200c650be9
  - if: linux
    then:
      url: https://downloads.haskell.org/~ghc/${{ version }}/ghc-${{ version }}-x86_64-ubuntu20_04-linux.tar.xz
      sha256: ae3be406fdb73bd2b0c22baada77a8ff2f8cde6220dd591dc24541cfe9d895eb
  - if: not unix
    then:
      url: https://downloads.haskell.org/~ghc/${{ version }}/ghc-${{ version }}-x86_64-unknown-mingw32.tar.gz
      sha256: 2e7d766deaaaef95ddc563aebc5f6cbeb286c51a3c124ab31a89a250f88711f9
      target_directory: bootstrap-ghc

build:
  number: 0
  # We would not need a x-compiled ghc-bootstrap
  skip: aarch64 or arm64

requirements:
  host:
    - ${{ compiler('c') }}
    - ${{ compiler('cxx') }}
    - ${{ stdlib('c') }}

    - if: unix
      then:
        - gmp
        - libffi
        - make
        - patchelf
        - perl
      else:
        - binutils
        - m2-bash
        - m2-coreutils
        - m2-findutils
        - m2-tar
        - m2-which
        - m2w64-gcc-libs
        - m2w64-gcc-libs-core
        - m2w64-gmp
        - m2w64-libffi
  run:
    - ${{ compiler('c') }}
    - ${{ stdlib('c') }}
    - libffi
    - if: unix
      then:
        - gmp
        - libiconv
        - ncurses
      else:
        - binutils
        - m2w64-gcc-libs
        - m2w64-gcc-libs-core

tests:
  - package_contents:
      files:
        - ghc-bootstrap/bin/ghc-${{ version }}${{ "" if unix else ".exe" }}
        - ghc-bootstrap/bin/ghc-pkg-${{ version }}${{ "" if unix else ".exe" }}
        - ghc-bootstrap/bin/ghc-pkg${{ "" if unix else ".exe" }}
        - ghc-bootstrap/bin/ghc${{ "" if unix else ".exe" }}
        - ghc-bootstrap/bin/ghci-${{ version }}${{ "" if unix else ".exe" }}
        - ghc-bootstrap/bin/ghci${{ "" if unix else ".exe" }}
        - ghc-bootstrap/bin/haddock-ghc-${{ version }}${{ "" if unix else ".exe" }}
        - ghc-bootstrap/bin/haddock${{ "" if unix else ".exe" }}
        - ghc-bootstrap/bin/hp2ps-ghc-${{ version }}${{ "" if unix else ".exe" }}
        - ghc-bootstrap/bin/hp2ps${{ "" if unix else ".exe" }}
        - ghc-bootstrap/bin/hpc-ghc-${{ version }}${{ "" if unix else ".exe" }}
        - ghc-bootstrap/bin/hpc${{ "" if unix else ".exe" }}
        - ghc-bootstrap/bin/hsc2hs-ghc-${{ version }}${{ "" if unix else ".exe" }}
        - ghc-bootstrap/bin/hsc2hs${{ "" if unix else ".exe" }}
        - ghc-bootstrap/bin/runghc-${{ version }}${{ "" if unix else ".exe" }}
        - ghc-bootstrap/bin/runghc${{ "" if unix else ".exe" }}
        - ghc-bootstrap/bin/runhaskell-${{ version }}${{ "" if unix else ".exe" }}
        - ghc-bootstrap/bin/runhaskell${{ "" if unix else ".exe" }}
        - if: unix
          then:
            - ghc-bootstrap/lib/ghc-${{ version }}/bin/ghc-toolchain-bin-ghc-${{ version }}${{ "" if unix else ".exe" }}
            - ghc-bootstrap/lib/ghc-${{ version }}/bin/ghc-toolchain-bin${{ "" if unix else ".exe" }}
          else:
            - ghc-bootstrap/bin/ghc-iserv-ghc-${{ version }}.exe
            - ghc-bootstrap/bin/ghc-iserv-prof-ghc-${{ version }}.exe
            - ghc-bootstrap/bin/ghc-iserv-prof.exe
            - ghc-bootstrap/bin/ghc-iserv.exe
            - ghc-bootstrap/bin/unlit-ghc-${{ version }}.exe
            - ghc-bootstrap/bin/unlit.exe
            - ghc-bootstrap/bin/ghcii.sh
            - ghc-bootstrap/bin/ghcii9.10.1.sh

            - ghc-bootstrap/mingw/**


  - script:
      - if: unix
        then: ${PREFIX}/ghc-bootstrap/bin/ghc --version
        else: CALL %PREFIX%/ghc-bootstrap/bin/ghc.exe --version

  - script:
      - printf 'main = putStrLn "Hello conda-forge"\n' > hello.hs
      - if: osx
        then: ${PREFIX}/ghc-bootstrap/bin/ghc -v -L${CONDA_PREFIX}/lib -optl-Wl,-rpath,${CONDA_PREFIX}/lib hello.hs
      - if: linux
        then: ${PREFIX}/ghc-bootstrap/bin/ghc -v -L${CONDA_PREFIX}/lib hello.hs
      - if: not unix
        then: |
          echo main = putStrLn "Hello conda-forge" > hello.hs
          set INCLUDE=%BUILD_PREFIX%\Library\include;%INCLUDE%
          set LIB=%BUILD_PREFIX%\Library\lib;%LIB%
          set LD=ld.exe
          CALL %PREFIX%\ghc-bootstrap\bin\ghc.exe -v -L%BUILD_PREFIX%\Library\lib hello.hs
      - if: unix
        then: ./hello
        else: hello.exe

about:
  homepage: https://haskell.org/ghc/
  license: BSD-3-Clause
  license_file: license_files/
  summary: Glorious Glasgow Haskell Compilation System
  description: |
    GHC is a state-of-the-art, open source, compiler and interactive environment 
    for the functional language Haskell.
  documentation: https://www.haskell.org/ghc/documentation.html
  repository: https://gitlab.haskell.org/ghc/ghc

extra:
  recipe-maintainers:
    - eggzilla
